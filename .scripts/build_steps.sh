#!/usr/bin/env bash

# PLEASE NOTE: This script has been automatically generated by conda-smithy. Any changes here
# will be lost next time ``conda smithy rerender`` is run. If you would like to make permanent
# changes to this script, consider a proposal to conda-smithy so that other feedstocks can also
# benefit from the improvement.

set -xeuo pipefail
export PYTHONUNBUFFERED=1
export FEEDSTOCK_ROOT="${FEEDSTOCK_ROOT:-/home/conda/feedstock_root}"
export RECIPE_ROOT="${RECIPE_ROOT:-/home/conda/recipe_root}"
export CI_SUPPORT="${FEEDSTOCK_ROOT}/.ci_support"
export CONFIG_FILE="${CI_SUPPORT}/${CONFIG}.yaml"

cat >~/.condarc <<CONDARC

conda-build:
 root-dir: ${FEEDSTOCK_ROOT}/build_artifacts

CONDARC

conda install --yes --quiet conda-forge-ci-setup=3 conda-build pip -c conda-forge

# set up the condarc
setup_conda_rc "${FEEDSTOCK_ROOT}" "${RECIPE_ROOT}" "${CONFIG_FILE}"
conda config --add channels rapidsai-nightly
conda config --add channels nvidia

source run_conda_forge_build_setup

# Avoid redefinitions from linux-headers that cause UCX build failures
/usr/bin/sudo -n yum remove -y glibc-headers

# Install the yum requirements defined canonically in the
# "recipe/yum_requirements.txt" file. After updating that file,
# run "conda smithy rerender" and this line will be updated
# automatically.
/usr/bin/sudo -n yum install -y numactl-devel

# Retrieve OFED package
/usr/bin/sudo -n yum install -y wget
wget http://content.mellanox.com/ofed/MLNX_OFED-4.7-1.0.0.1/MLNX_OFED_LINUX-4.7-1.0.0.1-rhel7.7-x86_64.tgz
tar xzf MLNX_OFED_LINUX-4.7-1.0.0.1-rhel7.7-x86_64.tgz
# Remove firmware updater package
rm MLNX_OFED_LINUX-4.7-1.0.0.1-rhel7.7-x86_64/RPMS/MLNX_LIBS/mlnx-fw-updater*
# Install OFED packages
/usr/bin/sudo -n yum localinstall -y MLNX_OFED_LINUX-4.7-1.0.0.1-rhel7.7-x86_64/RPMS/MLNX_LIBS/*.rpm
rm -rf MLNX_OFED_LINUX-4.7-1.0.0.1-rhel7.7-x86_64 MLNX_OFED_LINUX-4.7-1.0.0.1-rhel7.7-x86_64.tgz

# make the build number clobber
make_build_number "${FEEDSTOCK_ROOT}" "${RECIPE_ROOT}" "${CONFIG_FILE}"

conda build "${RECIPE_ROOT}" -m "${CI_SUPPORT}/${CONFIG}.yaml" \
    --suppress-variables \
    --clobber-file "${CI_SUPPORT}/clobber_${CONFIG}.yaml"

if [[ "${UPLOAD_PACKAGES}" != "False" ]]; then
    upload_package  "${FEEDSTOCK_ROOT}" "${RECIPE_ROOT}" "${CONFIG_FILE}"
fi

touch "${FEEDSTOCK_ROOT}/build_artifacts/conda-forge-build-done-${CONFIG}"
